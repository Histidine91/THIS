piece base, front, link, back, left, right, bay0, bay1;
piece frontemit, linkemit0, linkemit1, linkemit2, backemit, leftemit, rightemit;
piece turret0, barrel0, gp0, turret1, barrel1, gp1, grav, turret2, barrel2, gp2;
piece tp00, tp10, tp01, tp11, tp02, tp12;

#include "THIS.h"

TRAIL(base,1,1,1)	//fake trail

Create() {
	fireStealthTime = 3000;
	isMoving = 0;
	if (!get PERK_MORE_GUNS) {
		hide turret2;
		hide barrel2;
	}
	if (get PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-1,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-1,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-3,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KLIGHT_ROF_BOOST);
	}
	if (get PERK_BETTER_GRAV) {
		get WEAPON_RANGE(-4, GSTANDARD_RANGE_BOOST);
		get WEAPON_RANGE(-6, GFLAK_RANGE_BOOST);
	}
	turn turret1 to y-axis <180> now;
	sleep 30; //to let the MoveCtrl move it
	emit-sfx 1027 from frontemit;
	emit-sfx 1027 from backemit;
	turn tp00 to y-axis <-85> now;
	turn tp01 to y-axis <-90> now;
	turn tp02 to y-axis <-95> now;
	turn tp10 to y-axis <85> now;
	turn tp11 to y-axis <90> now;
	turn tp12 to y-axis <95> now;
}

Killed() {
	emit-sfx 1026 from turret0;
	emit-sfx 1026 from turret1;
	
	hide turret0;
	hide barrel0;
	hide turret1;
	hide barrel1;
	hide turret2;
	hide barrel2;

	emit-sfx 1024 from linkemit0;
	sleep 150;
	emit-sfx 1024 from linkemit1;
	sleep 50;
	emit-sfx 1024 from linkemit2;
	sleep 100;
	hide link;

	move front to z-axis [90] speed [8];
	spin front around x-axis speed <20>;
	move back to z-axis [-90] speed [10];
	move left to z-axis [-90] speed [10];
	move right to z-axis [-90] speed [10];
	sleep 1300;

	emit-sfx 1025 from backemit;
	sleep 700;
	hide back;

	move left to x-axis [-20] speed [16];
	move right to x-axis [50] speed [16];
	spin right around z-axis speed <50>;
	sleep 600;

	emit-sfx 1026 from leftemit;
	sleep 400;
	hide left;

	sleep 800;

	emit-sfx 1026 from rightemit;
	sleep 400;
	hide right;

	sleep 400;

	emit-sfx 1025 from frontemit;
	sleep 700;
	hide front;
	return 0;
}

NewPerk(p) {
	if (p == PERK_MORE_GUNS) {
		show turret2;
		show barrel2;
	}
	if (p == PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-1,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-1,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-3,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KLIGHT_ROF_BOOST);
	}
	if (p == PERK_BETTER_GRAV) {
		get WEAPON_RANGE(-4, GSTANDARD_RANGE_BOOST);
		get WEAPON_RANGE(-6, GFLAK_RANGE_BOOST);
	}
}

#define TURRETAIM <160>
#define BARRELAIM <120>

#define MUZZLE (1028 + get PERK_BETTER_KINETICS)

AimFromWeapon1(p) {
	p=turret0;
}

QueryWeapon1(p) {
	p=gp0;
}

AimWeapon1(h,p) {
	signal SIG_Aim1;
	set-signal-mask SIG_Aim1;
	turn turret0 to y-axis h speed TURRETAIM;
	turn barrel0 to x-axis 0 - p speed BARRELAIM;
	wait-for-turn turret0 around y-axis;
	wait-for-turn barrel0 around x-axis;
	return 1;
}

Shot1() {
	emit-sfx MUZZLE from gp0;
}

AimFromWeapon2(p) {
	p=turret1;
}

QueryWeapon2(p) {
	p=gp1;
}

AimWeapon2(h,p) {
	signal SIG_Aim2;
	set-signal-mask SIG_Aim2;
	turn turret1 to y-axis h speed TURRETAIM;
	turn barrel1 to x-axis 0 - p speed BARRELAIM;
	wait-for-turn turret1 around y-axis;
	wait-for-turn barrel1 around x-axis;
	return 1;
}

Shot2() {
	emit-sfx MUZZLE from gp1;
}



AimFromWeapon3(p) {
	p=turret2;
}

QueryWeapon3(p) {
	p=gp2;
}

AimWeapon3(h,p) {
	if (!get PERK_MORE_GUNS) return 0;
	signal SIG_Aim3;
	set-signal-mask SIG_Aim3;
	turn turret2 to y-axis h speed TURRETAIM;
	turn barrel2 to x-axis 0 - p speed BARRELAIM;
	wait-for-turn turret2 around y-axis;
	wait-for-turn barrel2 around x-axis;
	return 1;
}

Shot3() {
	emit-sfx MUZZLE from gp2;
}


AimFromWeapon4(p) {
	p=grav;
}

QueryWeapon4(p) {
	p=grav;
}

AimWeapon4() {
	return 1;
}

Shot4() {
	set STEALTH to 0;
	start-script RestoreStealth();
}


AimFromWeapon5(p) {
	p=grav;
}

QueryWeapon5(p) {
	p=grav;
}

AimWeapon5() {
	return 1;
}

FireWeapon5() {
	var t;
	t=get TARGET_ID(5);
	if(t>0) {
		call-script lua_LaunchDroneWeapon(t, TORPEDO, tp00, 0);
		call-script lua_LaunchDroneWeapon(t, TORPEDO, tp10, 0);
		//sleep 100;
		call-script lua_LaunchDroneWeapon(get TARGET_ID(5), TORPEDO, tp01, 0);
		call-script lua_LaunchDroneWeapon(get TARGET_ID(5), TORPEDO, tp11, 0);
		//sleep 100;
		call-script lua_LaunchDroneWeapon(get TARGET_ID(5), TORPEDO, tp02, 0);
		call-script lua_LaunchDroneWeapon(get TARGET_ID(5), TORPEDO, tp12, 0);
	}
}

BlockShot5(target, block) {
	block= !target;
}


AimFromWeapon6(p) {
	p=grav;
}

QueryWeapon6(p) {
	p=grav;
}

AimWeapon6() {
	return (get PERK_GRAV_FLAK);
}
