piece base, body, damage0, damage1, ex;
piece guns, gp0, gp1, tp0, tp1, tp2, tp3;

#include "THIS.h"

DamageLoop() {
	signal SIG_Damage;
	set-signal-mask SIG_Damage;
	while((get HEALTH) < 50) {
		set CEG_DAMAGE to 25 - (get HEALTH)/2;
		emit-sfx 1024 from damage0;
		if ((get HEALTH) < 30) emit-sfx 1024 from damage1;
		sleep 50;
	}
}

TRAIL(ex,8,128,16)

#define MUZZLE (1026 + get PERK_BETTER_KINETICS)
#define SPAM_RELOAD 540
//24 seconds


Create() {
	if (!get PERK_MORE_GUNS) {
		hide guns;
	}
	if (get PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KDUAL_ROF_BOOST);
	}
	turn ex to y-axis <90> now;
	call-script MoveRate1();
}

NewPerk(p) {
	if (p == PERK_MORE_GUNS) {
		show guns;
	}
	else if (p == PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KDUAL_ROF_BOOST);
	}
}

static-var volley;

Toggle(t,value) {
	if (t==1) {
		volley=value;
	}
}

Killed() {
	emit-sfx 1025 from base;
	sleep 100;
	hide body;
	hide guns;
}

HitByWeaponId(z,x,id,d) {
	start-script DamageLoop();
	return 100;
}


static-var tp, pitch;

Special(t) {
	var i;
	if(t>0) {
		call-script lua_GetGameFrame();
		get WEAPON_RELOADSTATE(-1, SPAM_RELOAD + get LUA1);
		spin body around z-axis speed <180> accelerate <99999>;
		for (i=0;i<6; ++i) {
			var r;
			r=rand(12000,19000);
			turn tp0 to y-axis r now;
			turn tp1 to y-axis 0- r now;
			call-script lua_LaunchDroneWeapon(t, FTORPEDO, tp0 + tp, 0, 0);
			call-script lua_LaunchDroneWeapon(t, FTORPEDO, tp1 + tp, 0, 0);
			//tp = 2 * !tp;
			sleep 180;
		}
		stop-spin body around z-axis decelerate <99999>;
		turn body to z-axis 0 now;
	}
	turn tp0 to y-axis 0 now;
	turn tp1 to y-axis 0 now;
}

AimFromWeapon1(p) {
	p=body;
}

QueryWeapon1(p) {
	p=body;
}

AimWeapon1(h,p) {
	pitch=p;
	return 1;
}

FireWeapon1() {
	var t;
	t=get TARGET_ID(1);
	if(t>0) {
		if (volley) {
			call-script Special(t);
		}
		else {
			call-script lua_LaunchDroneWeapon(t, FTORPEDO, tp0 + tp, 0, pitch);
			call-script lua_LaunchDroneWeapon(t, FTORPEDO, tp1 + tp, 0, pitch);
		}
	}
}


static-var gp;

AimFromWeapon2(p) {
	p=guns;
}

QueryWeapon2(p) {
	p=gp0 + gp;
}

AimWeapon2(h,p) {
	if (!get PERK_MORE_GUNS) return 0;
	return 1;
}

Shot2() {
	if (gp)
		emit-sfx MUZZLE from gp1;
	else
		emit-sfx MUZZLE from gp0;
	gp = !gp;
}
