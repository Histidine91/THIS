piece base, body, ex0, ex1, ex, damage0, damage1;
piece cannon0, gp0, cannon1, gp1, cannon2, gp2;

#include "THIS.h"

DamageLoop() {
	signal SIG_Damage;
	set-signal-mask SIG_Damage;
	while((get HEALTH) < 50) {
		set CEG_DAMAGE to 25 - (get HEALTH)/2;
		emit-sfx 1024 from damage0;
		if ((get HEALTH) < 30) emit-sfx 1024 from damage1;
		sleep 50;
	}
}

TRAIL(ex,6,128,8)

Create() {
	if (!get PERK_MORE_GUNS) hide cannon2;
	if (get PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-1,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-1,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-3,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KLIGHT_ROF_BOOST);
	}
	sleep 1;
	turn ex to y-axis <90> now;
	call-script MoveRate1();
}

NewPerk(p) {
	if (p == PERK_MORE_GUNS) {
		show cannon2;
	}
	else if (p == PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-1,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-1,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-3,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KLIGHT_ROF_BOOST);
	}
}

Killed() {
	emit-sfx 1025 from base;
	//get PLAY_SOUND(S_DEATH_SMALL,[5]);
	sleep 100;
	hide body;
	hide cannon0;
	hide cannon1;
	hide cannon2;
}

HitByWeaponId(z,x,id,d) {
	start-script DamageLoop();
	return 100;
}

#define MUZZLE (1026 + get PERK_BETTER_KINETICS)

AimFromWeapon1(p) {
	p=cannon0;
}

QueryWeapon1(p) {
	p=gp0;
}

AimWeapon1(h,p) {
	signal SIG_Aim1;
	set-signal-mask SIG_Aim1;
	turn cannon0 to y-axis h speed <90>;
	turn cannon0 to x-axis 0 - p speed <90>;
	wait-for-turn cannon0 around x-axis;
	wait-for-turn cannon0 around y-axis;
	return 1;
}

Shot1() {
	emit-sfx MUZZLE from gp0;
}


AimFromWeapon2(p) {
	p=cannon1;
}

QueryWeapon2(p) {
	p=gp1;
}

AimWeapon2(h,p) {
	signal SIG_Aim2;
	set-signal-mask SIG_Aim2;
	turn cannon1 to y-axis h speed <90>;
	turn cannon1 to x-axis 0 - p speed <90>;
	wait-for-turn cannon1 around x-axis;
	wait-for-turn cannon1 around y-axis;
	return 1;
}

Shot2() {
	emit-sfx MUZZLE from gp1;
}


AimFromWeapon3(p) {
	p=cannon2;
}

QueryWeapon3(p) {
	p=gp2;
}

AimWeapon3(h,p) {
	if (!get PERK_MORE_GUNS) return 0;
	signal SIG_Aim3;
	set-signal-mask SIG_Aim3;
	turn cannon2 to y-axis h speed <90>;
	turn cannon2 to x-axis 0 - p speed <90>;
	wait-for-turn cannon2 around x-axis;
	wait-for-turn cannon2 around y-axis;
	return 1;
}

Shot3() {
	emit-sfx MUZZLE from gp2;
}
