piece base, front, body, rear;
piece frontemit, rearemit, bodyemit, grav;
piece lturret0, lbarrel0, ls0, lturret1, lbarrel1, ls1;
piece pturret0, pbarrel0, pl0, pturret1, pbarrel1, pl1;
piece tp00, tp01, tp10, tp11;

#include "THIS.h"

TRAIL(base,1,1,1)	//fake trail

Create() {
	fireStealthTime = 3000;
	sleep 30; //to let the MoveCtrl move it
	emit-sfx 1027 from frontemit;
	emit-sfx 1027 from rearemit;
	if (get PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-3,KMEDIUM_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KMEDIUM_ROF_BOOST);
		get WEAPON_SPRAY(-4,KMEDIUM_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-4,KMEDIUM_ROF_BOOST);
	}
	if (get PERK_BETTER_GRAV) {
		get WEAPON_RANGE(-5, GSTANDARD_RANGE_BOOST);
		get WEAPON_RANGE(-7, GFLAK_RANGE_BOOST);
	}
	
	turn tp00 to y-axis <-90> now;
	turn tp01 to y-axis <-120> now;
	turn tp10 to y-axis <90> now;
	turn tp11 to y-axis <120> now;
}

Killed() {
//	emit-sfx 1026 from frontemit;
//	emit-sfx 1026 from rearemit;
//	sleep 1500;

	emit-sfx 1025 from bodyemit;
	sleep 700;
	hide body;
	hide pturret0;
	hide pturret1;
	hide pbarrel0;
	hide pbarrel1;
	move front to z-axis [90] speed [16];
	move rear to z-axis [-90] speed [24];
	spin front around x-axis speed <20>;
	
	sleep 1800;
	emit-sfx 1026 from frontemit;
	emit-sfx 1024 from lturret0;
	emit-sfx 1024 from lturret1;
	sleep 100;
	hide front;
	hide lturret0;
	hide lturret1;
	hide lbarrel0;
	hide lbarrel1;
	
	sleep 1100;
	emit-sfx 1025 from rearemit;
	sleep 700;
	hide rear;
}

NewPerk(p) {
	if (p == PERK_BETTER_GRAV) {
		get WEAPON_RANGE(-5, GSTANDARD_RANGE_BOOST);
		get WEAPON_RANGE(-7, GFLAK_RANGE_BOOST);
	}
	if (p == PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-3,KMEDIUM_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KMEDIUM_ROF_BOOST);
		get WEAPON_SPRAY(-4,KMEDIUM_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-4,KMEDIUM_ROF_BOOST);
	}
}

#define LTURRETAIM <360>
#define LBARRELAIM <240>
#define PTURRETAIM <120>
#define PBARRELAIM <80>

AimFromWeapon1(p) {
	p=pturret0;
}

QueryWeapon1(p) {
	p=pl0;
}

AimWeapon1(h,p) {
	signal SIG_Aim1;
	set-signal-mask SIG_Aim1;
	turn pturret0 to y-axis h speed PTURRETAIM;
	turn pbarrel0 to x-axis 0 - p speed PBARRELAIM;
	wait-for-turn pturret0 around y-axis;
	wait-for-turn pbarrel0 around x-axis;
	return 1;
}

Shot1() {
	set STEALTH to 0;
	start-script RestoreStealth();
}

AimFromWeapon2(p) {
	p=pturret1;
}

QueryWeapon2(p) {
	p=pl1;
}

AimWeapon2(h,p) {
	signal SIG_Aim2;
	set-signal-mask SIG_Aim2;
	turn pturret1 to y-axis h speed PTURRETAIM;
	turn pbarrel1 to x-axis 0 - p speed PBARRELAIM;
	wait-for-turn pturret1 around y-axis;
	wait-for-turn pbarrel1 around x-axis;
	return 1;
}

Shot2() {
	set STEALTH to 0;
	start-script RestoreStealth();
}


#define MUZZLE (1028 + get PERK_BETTER_KINETICS)

AimFromWeapon3(p) {
	p=lturret0;
}

QueryWeapon3(p) {
	p=ls0;
}

AimWeapon3(h,p) {
	signal SIG_Aim3;
	set-signal-mask SIG_Aim3;
	turn lturret0 to y-axis h speed LTURRETAIM;
	turn lbarrel0 to x-axis 0 - p speed LBARRELAIM;
	wait-for-turn lturret0 around y-axis;
	wait-for-turn lbarrel0 around x-axis;
	return 1;
}

Shot3() {
	emit-sfx MUZZLE from ls0;
}



AimFromWeapon4(p) {
	p=lturret1;
}

QueryWeapon4(p) {
	p=ls1;
}

AimWeapon4(h,p) {
	signal SIG_Aim4;
	set-signal-mask SIG_Aim4;
	turn lturret1 to y-axis h speed LTURRETAIM;
	turn lbarrel1 to x-axis 0 - p speed LBARRELAIM;
	wait-for-turn lturret1 around y-axis;
	wait-for-turn lbarrel1 around x-axis;
	return 1;
}

Shot4() {
	emit-sfx MUZZLE from ls1;
}



AimFromWeapon5(p) {
	p=grav;
}

QueryWeapon5(p) {
	p=grav;
}

AimWeapon5() {
	return 1;
}

Shot5() {
	set STEALTH to 0;
	start-script RestoreStealth();
}



AimFromWeapon6(p) {
	p=grav;
}

QueryWeapon6(p) {
	p=grav;
}

AimWeapon6() {
	return 1;
}

FireWeapon6() {
	var t;
	t=get TARGET_ID(6);
	if(t>0) {
		call-script lua_LaunchDroneWeapon(t, TORPEDO, tp00, 0);
		call-script lua_LaunchDroneWeapon(t, TORPEDO, tp10, 0);
		sleep 300;
		call-script lua_LaunchDroneWeapon(get TARGET_ID(6), TORPEDO, tp01, 0);
		call-script lua_LaunchDroneWeapon(get TARGET_ID(6), TORPEDO, tp11, 0);
	}
}

BlockShot6(target, block) {
	block= !target;
}



AimFromWeapon7(p) {
	p=grav;
}

QueryWeapon7(p) {
	p=grav;
}

AimWeapon7() {
	return (get PERK_GRAV_FLAK);
}
