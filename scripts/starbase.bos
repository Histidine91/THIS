piece base, body, link, ring, bay0, bay1;
piece bodyemit0, bodyemit1, linkemit0, linkemit1, linkemit2;
piece turret0, barrel0, gp00, gp01, turret1, barrel1, gp1, turret2, barrel2, gp2, turret3, barrel3, gp3;
piece tp0, tp1, tp2;
#include "THIS.h"

Create() {
	if (!get PERK_MORE_GUNS) {
		hide turret0;
		hide barrel0;
	}
	if (get PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-1,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-1,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-3,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KLIGHT_ROF_BOOST);
	}
	
	permaStealth = 1;
	
	sleep 30; //to let the MoveCtrl move it
	turn bay0 to y-axis <-25> now;
	turn bay1 to y-axis <155> now;
	turn bodyemit0 to x-axis <-90> now;
	turn bodyemit1 to x-axis <-90> now;
	emit-sfx 1027 from bodyemit0;
	emit-sfx 1027 from bodyemit1;
	turn tp0 to y-axis <30> now;
	turn tp1 to y-axis <150> now;
	turn tp2 to y-axis <270> now;
	turn tp0 to x-axis <-30> now;
	turn tp1 to x-axis <-30> now;
	turn tp2 to x-axis <-30> now;
}

Killed() {
	emit-sfx 1024 from linkemit0;
	sleep 150;
	emit-sfx 1024 from linkemit1;
	sleep 100;
	emit-sfx 1024 from linkemit2;
	sleep 50;
	hide link;
	
	spin ring around z-axis speed <20>;
	move ring to y-axis [90] speed [12];
	spin body around z-axis speed <-10>;
	move body to y-axis [-90] speed [8];
	
	sleep 1200;
	emit-sfx 1025 from bodyemit0;
	emit-sfx 1026 from bodyemit1;
	sleep 700;
	hide body;
	hide turret0;
	hide barrel0;
	
	sleep 800;
	emit-sfx 1024 from turret1;
	emit-sfx 1024 from turret2;
	sleep 120;
	emit-sfx 1024 from turret3;
	sleep 300;
	emit-sfx 1025 from ring;
	sleep 700;
	return 0;
}

NewPerk(p) {
	if (p == PERK_MORE_GUNS) {
		show turret0;
		show barrel0;
	}
	else if (p == PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-1,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-1,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-3,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KLIGHT_ROF_BOOST);
	}
}

#define TURRETAIM <160>
#define BARRELAIM <120>

#define MUZZLE (1028 + get PERK_BETTER_KINETICS)


static-var gp;

AimFromWeapon4(p) {
	p=turret0;
}

QueryWeapon4(p) {
	p=gp00 + gp;
}

AimWeapon4(h,p) {
	if (!get PERK_MORE_GUNS) return 0;
	signal SIG_Aim1;
	set-signal-mask SIG_Aim1;
	turn turret0 to y-axis h speed TURRETAIM;
	turn barrel0 to x-axis 0 - p speed BARRELAIM;
	wait-for-turn turret0 around y-axis;
	wait-for-turn barrel0 around x-axis;
	return 1;
}

Shot4() {
	gp = !gp;
}



AimFromWeapon1(p) {
	p=turret1;
}

QueryWeapon1(p) {
	p=gp1;
}

AimWeapon1(h,p) {
	signal SIG_Aim2;
	set-signal-mask SIG_Aim2;
	turn turret1 to y-axis h speed TURRETAIM;
	turn barrel1 to x-axis 0 - p speed BARRELAIM;
	wait-for-turn turret1 around y-axis;
	wait-for-turn barrel1 around x-axis;
	return 1;
}

Shot1() {
	emit-sfx MUZZLE from gp1;
}


AimFromWeapon2(p) {
	p=turret2;
}

QueryWeapon2(p) {
	p=gp2;
}

AimWeapon2(h,p) {
	signal SIG_Aim3;
	set-signal-mask SIG_Aim3;
	turn turret2 to y-axis h speed TURRETAIM;
	turn barrel2 to x-axis 0 - p speed BARRELAIM;
	wait-for-turn turret2 around y-axis;
	wait-for-turn barrel2 around x-axis;
	return 1;
}

Shot2() {
	emit-sfx MUZZLE from gp2;
}


AimFromWeapon3(p) {
	p=turret3;
}

QueryWeapon3(p) {
	p=gp3;
}

AimWeapon3(h,p) {
	signal SIG_Aim4;
	set-signal-mask SIG_Aim4;
	turn turret3 to y-axis h speed TURRETAIM;
	turn barrel3 to x-axis 0 - p speed BARRELAIM;
	wait-for-turn turret3 around y-axis;
	wait-for-turn barrel3 around x-axis;
	return 1;
}

Shot3() {
	emit-sfx MUZZLE from gp3;
}



AimFromWeapon5(p) {
	p=base;
}

QueryWeapon5(p) {
	p=base;
}

AimWeapon5() {
	return 1;
}

FireWeapon5() {
	var t;
	t=get TARGET_ID(5);
	if(t>0) {
		call-script lua_LaunchDroneWeapon(t, TORPEDO, tp0, 0,<-30>);
		call-script lua_LaunchDroneWeapon(t, TORPEDO, tp1, 0,<-30>);
		call-script lua_LaunchDroneWeapon(t, TORPEDO, tp2, 0,<-30>);
	}
}

BlockShot5(target, block) {
	block= !target;
}