piece body, damage0, damage1, ex;
piece cannon, pivot, gp0, turret1, sleeve1, barrel1, gp1, lpod, lbarrel, rpod, rbarrel, gp20, gp21;

#include "THIS.h"

DamageLoop() {
	signal SIG_Damage;
	set-signal-mask SIG_Damage;
	while((get HEALTH) < 50) {
		set CEG_DAMAGE to 25 - (get HEALTH)/2;
		emit-sfx 1024 from damage0;
		if ((get HEALTH) < 30) emit-sfx 1024 from damage1;
		sleep 50;
	}
}

TRAIL(ex,5,128,16)

#define MUZZLE (1026 + get PERK_BETTER_KINETICS)


Create() {
	fireStealthTime = 2000;
	if (!get PERK_MORE_GUNS) {
		hide lpod;
		hide lbarrel;
		hide rpod;
		hide rbarrel;
	}
	if (get PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-3,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KDUAL_ROF_BOOST);
	}
	turn ex to y-axis <90> now;
	call-script MoveRate1();
}

NewPerk(p) {
	if (p == PERK_MORE_GUNS) {
		show lpod;
		show lbarrel;
		show rpod;
		show rbarrel;
	}
	else if (p == PERK_BETTER_KINETICS) {
		get WEAPON_SPRAY(-2,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-2,KLIGHT_ROF_BOOST);
		get WEAPON_SPRAY(-3,KLIGHT_SPRAY_BOOST);
		get WEAPON_RELOADTIME(-3,KDUAL_ROF_BOOST);
	}
}

Killed() {
	emit-sfx 1025 from body;
	sleep 100;
	hide body;
	hide cannon;
	hide turret1;
	hide barrel1;
	hide sleeve1;
	hide lpod;
	hide lbarrel;
	hide rpod;
	hide rbarrel;
}

/*StartMoving() {
	set STEALTH to 0;
	isMoving = 1;
}

StopMoving() {
	start-script RestoreStealth();
	isMoving = 0;
}*/

HitByWeaponId(z,x,id,d) {
	start-script DamageLoop();
	return 100;
}

AimFromWeapon1(p) {
	p=cannon;
}

QueryWeapon1(p) {
	p=gp0;
}

AimWeapon1(h,p) {
	signal SIG_Aim1;
	set-signal-mask SIG_Aim1;
	turn pivot to y-axis h speed <90>;
	turn pivot to x-axis 0 - p speed <90>;
	wait-for-turn pivot around x-axis;
	wait-for-turn pivot around y-axis;
	return 1;
}

Shot1() {
	set STEALTH to 0;
	start-script RestoreStealth();
	move cannon to z-axis [-1.5] now;
	sleep 400;
	move cannon to z-axis [0] speed [2];
}
AimFromWeapon2(p) {
	p=turret1;
}

QueryWeapon2(p) {
	p=gp1;
}

AimWeapon2(h,p) {
	signal SIG_Aim2;
	set-signal-mask SIG_Aim2;
	turn turret1 to y-axis h speed <90>;
	turn sleeve1 to x-axis 0 - p speed <90>;
	wait-for-turn turret1 around x-axis;
	wait-for-turn sleeve1 around y-axis;
	return 1;
}

Shot2() {
	emit-sfx MUZZLE from gp1;
}

static-var sa;

AimFromWeapon3(p) {
	p=body;
}

QueryWeapon3(p) {
	p=gp20 + sa;
}

AimWeapon3(h,p) {
	if (!get PERK_MORE_GUNS) return 0;
	return 1;
}

Shot3() {
	if (sa)
		emit-sfx MUZZLE from gp20;
	else
		emit-sfx MUZZLE from gp21;
	sa = !sa;
}
